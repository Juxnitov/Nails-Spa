generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cancelaciones {
  cancel_id Int       @id @default(autoincrement())
  pedido_id Int
  motivo    String?
  fecha     DateTime? @default(now()) @db.Timestamp(6)
  pedidos   pedidos   @relation(fields: [pedido_id], references: [pedido_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model juegos {
  juego_id    Int       @id @default(autoincrement())
  titulo      String
  descripcion String?
  precio      Decimal   @db.Decimal(12, 2)
  stock       Int?      @default(100)
  activo      Boolean?  @default(true)
  creado_en   DateTime? @default(now()) @db.Timestamp(6)
  pedidos     pedidos[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pedidos {
  pedido_id     Int             @id @default(autoincrement())
  usuario_id    Int
  juego_id      Int
  cantidad      Int
  total         Decimal         @db.Decimal(12, 2)
  fecha         DateTime?       @default(now()) @db.Timestamp(6)
  cancelaciones cancelaciones[]
  juegos        juegos          @relation(fields: [juego_id], references: [juego_id], onDelete: NoAction, onUpdate: NoAction)
  usuarios      usuarios        @relation(fields: [usuario_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model usuarios {
  usuario_id    Int       @id @default(autoincrement())
  nombre        String
  email         String    @unique
  password      String
  registrado_en DateTime? @default(now()) @db.Timestamp(6)
  pedidos       pedidos[]
}
